{"version":3,"sources":["components/aircraft/Aircraft.js","components/aircraft/AircraftWithPilot.js","hooks/useLocalStorage.js","components/pilots/AssignedPilot.js","hooks/useClickOutside.js","constants/default-preferences.js","components/startLine/StartLine.js","constants/constants.js","components/pilots/Pilot.js","components/pilots/PilotPlaceholder.js","components/pilots/PilotList.js","constants/gliders.js","components/aircraft/AircraftList.js","components/pilots/Preferences.js","components/settings/Settings.js","components/aircraft/LogbookEntry.js","components/pilots/Logbook.js","App.js","index.js"],"names":["selectable","aircraft","tailNumber","tailNumberColor","selected","onClick","textStyle","color","style","className","name","pilot","key","initialValue","useState","item","window","localStorage","getItem","JSON","parse","error","console","log","storedValue","setStoredValue","value","valueToStore","Function","setItem","stringify","assign","isFlying","id","unAssign","isPilotMenuOpen","setPilotMenuState","useLocalStorage","pilots","ref","useRef","handler","useEffect","listener","event","current","contains","target","document","addEventListener","removeEventListener","useClickOutside","clickPilot","useCallback","clickMenuItem","e","stopPropagation","filter","active","map","DEFAULT_PREFERENCES","dbo","solo","vvo","spl","dayjs","extend","duration","customParseFormat","getDraggableStyle","isDragging","providedStyle","transform","result","substring","indexOf","userSelect","selectedAircraft","setSelectedAircraft","preferences","assignments","setAssignments","flyingGliders","setFlyingGliders","logBook","setLogbook","showFlyingAircraft","setShowFlyingAircraft","getFlightsForPilot","pilotId","exclude","pilotInCommand","length","swapPositions","from","to","updatedSelectedAircraft","items","list","Array","splice","removed","reorder","Object","values","sort","a","b","order","fromEntries","index","land","glider","takeOffTime","landingTime","format","durationOfFlight","diff","updatedLogBook","uuid","updatedFlyingGliders","updatedAssignments","launch","frontAircraft","find","keys","onDragEnd","source","destination","assignPilot","unAssignPilot","landButtonPressed","autoSchedulePressed","assignedTailNumbers","unassginedGliders","activePilots","some","starts","assignmentsToPush","forEach","unassginedGlider","preference","type","idOfPilotToAssign","resetButtonPressed","flyingTailNumbers","entries","droppableId","provided","snapshot","droppableProps","innerRef","draggableId","isDragDisabled","undefined","draggableProps","dragHandleProps","AssignedPilot","placeholder","AircraftWithPilot","remove","toggleType","hideControls","hasPreferences","addPilot","newPilotName","setNewPilotName","submit","onChange","disabled","TYPES","setPilots","setFlights","setPreferences","assignedPilots","setAssignedPilots","showWarning","setShowWarning","warningText","setWarningText","candidatePilotIndex","findIndex","toLowerCase","candidatePilot","priority","slice","updatedPreferences","deletePilot","updatedAssignedPilots","indexOfPilot","pilotFromCollection","updatedPilot","nextIndex","incrementType","updatedPilots","confirmReset","aria-label","role","CLUB_GLIDERS","selectedPreferences","isPreferences","gliders","useMemo","toggleAircraft","amountOfSelectedAircraft","selectedPilot","setSelectedPilot","showPreferences","togglePreferences","selectedGlider","clubGlider","flight","flights","excludeFlight","indexOfFlight","updatedFlight","LogbookEntry","path","exact","ReactDOM","render","StrictMode","App","getElementById"],"mappings":"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","file":"static/js/main.dacc96e9.chunk.js","sourcesContent":["import React from 'react';\nimport './Aircraft.scss';\n\nexport default ({\n  selectable = false,\n  aircraft: {\n    tailNumber,\n    tailNumberColor,\n  },\n  selected = false,\n  onClick = () => {},\n}) => {\n  const textStyle = {\n    color: tailNumberColor,\n  }\n\n  return (\n    <span onClick={() => onClick(tailNumber)} style={textStyle} className=\"aircraft-container\">\n      <h1>{tailNumber}</h1>\n      {\n        selectable && selected ? (\n          <span className=\"check-mark\">\n            <i className=\"fas fa-check\"></i>\n          </span>\n        ) : ''\n      }\n    </span>\n  );\n}\n","import React from 'react';\nimport './Aircraft.scss';\n\nexport default ({\n  aircraft: {\n    tailNumber,\n    tailNumberColor,\n    selected,\n  },\n  pilot: {\n    name\n  },\n  onClick = () => {},\n}) => {\n  const textStyle = {\n    color: tailNumberColor,\n  }\n\n  return (\n    <div onClick={() => onClick(tailNumber)} className=\"aircraft-with-pilot-container\">\n      <div className=\"flex\">\n        <span style={textStyle} className=\"tail-number\">\n          <h1>{tailNumber}</h1>\n        </span>\n        <p>{name}</p>\n      </div>\n    </div>\n  );\n}\n","/**\n * https://usehooks.com/useLocalStorage/\n */\n\nimport { useState } from 'react';\n\nexport default (key, initialValue) => {\n  // State to store our value\n  // Pass initial state function to useState so logic is only executed once\n  const [storedValue, setStoredValue] = useState(() => {\n    try {\n      // Get from local storage by key\n      const item = window.localStorage.getItem(key);\n      // Parse stored json or if none return initialValue\n      return item ? JSON.parse(item) : initialValue;\n    } catch (error) {\n      // If error also return initialValue\n      console.log(error);\n      return initialValue;\n    }\n  });\n  // Return a wrapped version of useState's setter function that ...\n  // ... persists the new value to localStorage.\n  const setValue = (value) => {\n    try {\n      // Allow value to be a function so we have same API as useState\n      const valueToStore =\n        value instanceof Function ? value(storedValue) : value;\n      // Save state\n      setStoredValue(valueToStore);\n      // Save to local storage\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\n    } catch (error) {\n      // A more advanced implementation would handle the error case\n      console.log(error);\n    }\n  };\n\n  return [storedValue, setValue];\n};\n","import React, { useRef, useCallback, useState } from 'react';\nimport useLocalStorage from 'hooks/useLocalStorage';\nimport useClickOutside from 'hooks/useClickOutside';\nimport './Pilot.scss';\n\nexport default ({\n  assign,\n  aircraft: {\n    tailNumber,\n  },\n  isFlying,\n  pilot: {\n    id,\n    name = 'Not Assigned',\n  } = {},\n  unAssign,\n}) => {\n  const [isPilotMenuOpen, setPilotMenuState] = useState(false);\n  const [pilots] = useLocalStorage('pilots', []);\n  const ref = useRef();\n  useClickOutside(ref, () => setPilotMenuState(false));\n\n  const clickPilot = useCallback((id, tailNumber) => {\n    setPilotMenuState(false);\n    assign(id, tailNumber);\n  }, [setPilotMenuState, assign]);\n\n  const clickMenuItem = useCallback((e) => {\n    setPilotMenuState(false);\n    e.stopPropagation();\n  }, [setPilotMenuState]);\n\n  return (\n    // Some explanation for \"setPilotMenuState(!isFlying)}\" - This disables opening the menu for a flying ... \"kist\"\n    <div onClick={() => setPilotMenuState(!isFlying)} className=\"pilot-container assignable\">\n      <h2>{name ? name : ''}</h2>\n      {\n        isPilotMenuOpen ? (\n          <div onClick={(e) => clickMenuItem(e)} ref={ref} className=\"pilot-selection-menu\">\n            {\n              pilots.filter(({ active }) => active).map(({ id, name }) => (\n                <p key={id} onClick={() => clickPilot(id, tailNumber)}>{name}</p>\n              ))\n            }\n            <p className=\"danger\" onClick={() => unAssign(tailNumber)}>Remove</p>\n          </div>\n        ) : ''\n      }\n    </div>\n  );\n}\n","import { useEffect } from 'react';\n\nexport default (ref, handler) => {\n  useEffect(\n    () => {\n      const listener = (event) => {\n        // Do nothing if clicking ref's element or descendent elements\n        if (!ref.current || ref.current.contains(event.target)) {\n          return;\n        }\n        handler(event);\n      };\n      document.addEventListener(\"mousedown\", listener);\n      document.addEventListener(\"touchstart\", listener);\n      return () => {\n        document.removeEventListener(\"mousedown\", listener);\n        document.removeEventListener(\"touchstart\", listener);\n      };\n    },\n    // Add ref and handler to effect dependencies\n    // It's worth noting that because passed in handler is a new ...\n    // ... function on every render that will cause this effect ...\n    // ... callback/cleanup to run every render. It's not a big deal ...\n    // ... but to optimize you can wrap handler in useCallback before ...\n    // ... passing it into this hook.\n    [ref, handler]\n  );\n}\n","export const DEFAULT_PREFERENCES = {\n  dbo: ['ZD', '808'],\n  solo: ['LUC', 'WD', 'FD'],\n  vvo: ['LUC', 'WD', 'FD'],\n  spl: ['LUC', 'WD', 'FD'],\n}\n","import React, { useState, useCallback } from 'react';\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport Aircraft from 'components/aircraft/Aircraft';\nimport AircraftWithPilot from 'components/aircraft/AircraftWithPilot';\nimport AssignedPilot from 'components/pilots/AssignedPilot';\nimport useLocalStorage from 'hooks/useLocalStorage';\nimport { v4 as uuid } from 'uuid';\nimport dayjs from 'dayjs';\nimport duration from 'dayjs/plugin/duration';\nimport customParseFormat from 'dayjs/plugin/customParseFormat';\nimport { LOGBOOK_TIME_FORMAT } from 'constants/constants';\nimport { DEFAULT_PREFERENCES } from 'constants/default-preferences';\nimport './StartLine.scss';\n\ndayjs.extend(duration);\ndayjs.extend(customParseFormat);\n\nconst getDraggableStyle = (isDragging, providedStyle) => {\n  const { transform } = providedStyle;\n  let result = {};\n  if (transform) {\n    result = {\n      transform: `translate(0, ${transform.substring(\n        transform.indexOf(',') + 1,\n        transform.indexOf(')')\n      )})`,\n    };\n  }\n\n  return {\n    userSelect: 'none',\n    ...providedStyle,\n    ...result,\n  };\n};\n\n/**\n * Literally swap two elements in a list\n * @param  {Array}  list  The array on which to perform the changes\n * @param  {Number} from  Index of the point A\n * @param  {Number} to    Index of point B\n * @return {Array}        Exactly the same as the given array except for that from and to are now swapped\n */\nconst reorder = (list, from, to) => {\n  const result = Array.from(list);\n  const [removed] = result.splice(from, 1);\n  result.splice(to, 0, removed);\n\n  return result;\n};\n\nexport default () => {\n  const [selectedAircraft, setSelectedAircraft] = useLocalStorage('selected-gliders', {});\n  const [pilots] = useLocalStorage('pilots', []);\n  const [preferences] = useLocalStorage('pilot-preferences', []);\n  const [assignments, setAssignments] = useLocalStorage('assigned-pilots', {});\n  const [flyingGliders, setFlyingGliders] = useLocalStorage('flying', {});\n  const [logBook, setLogbook] = useLocalStorage('flights', []);\n  const [showFlyingAircraft, setShowFlyingAircraft] = useState(false);\n\n  // TODO this is also used in Pilot.js - should separate this to utils, but I'm lazy right now so yah....\n  const getFlightsForPilot = useCallback((pilotId) => {\n    return logBook.filter(({ exclude, pilotInCommand: { id } }) => !exclude && id === pilotId).length;\n  }, [logBook]);\n\n  const swapPositions = useCallback((from, to) => {\n    // Swap the source and destination aircraft\n    const updatedSelectedAircraft = {...selectedAircraft};\n    const items = reorder(Object.values(updatedSelectedAircraft).sort((a, b) => a.order - b.order), from, to);\n\n    // Update the selected gliders' order in the list\n    setSelectedAircraft({\n      ...Object.fromEntries(items.map((item, index) => ({\n        ...item,\n        order: index,\n      })).map(item => ([item.tailNumber, item]))),\n    });\n  }, [selectedAircraft, setSelectedAircraft]);\n\n  const land = useCallback((glider) => {\n    // Close the landing menu\n    setShowFlyingAircraft(false);\n\n    // Make an entry for the logbook\n    const { takeOffTime, pilotInCommand } = flyingGliders[glider.tailNumber];\n    const landingTime = dayjs().format(LOGBOOK_TIME_FORMAT);\n    const durationOfFlight = dayjs.duration(dayjs(landingTime, LOGBOOK_TIME_FORMAT).diff(dayjs(takeOffTime, LOGBOOK_TIME_FORMAT))).format('HH:mm');\n    const updatedLogBook = [\n      ...logBook,\n      {\n        id: uuid(),\n        glider,\n        pilotInCommand,\n        takeOffTime,\n        landingTime,\n        durationOfFlight,\n      },\n    ];\n\n    setLogbook(updatedLogBook);\n\n    // Remove the flying state from the list\n    const updatedFlyingGliders = {...flyingGliders};\n    delete updatedFlyingGliders[glider.tailNumber];\n\n    setFlyingGliders(updatedFlyingGliders);\n\n    // Unassign the landed glider\n    const updatedAssignments = {...assignments};\n    delete updatedAssignments[glider.tailNumber];\n\n    setAssignments(updatedAssignments);\n  }, [assignments, flyingGliders, logBook, setAssignments, setFlyingGliders, setLogbook]);\n\n  const launch = useCallback(() => {\n    // Launch button will launch the frontmost glider\n    const frontAircraft = Object.values(selectedAircraft).find(glider => glider.order === 0);\n    const pilotInCommand = assignments[frontAircraft.tailNumber];\n\n    // You cannot launch an empty glider\n    // You cannot launch a glider that is already flying, you silly :)\n    if (!pilotInCommand || flyingGliders[frontAircraft.tailNumber]) {\n      return;\n    }\n\n    // Swap this aircraft to end of list\n    swapPositions(0, Object.keys(selectedAircraft).length - 1);\n\n    const updatedFlyingGliders = { ...flyingGliders };\n    updatedFlyingGliders[frontAircraft.tailNumber] = {\n      pilotInCommand: assignments[frontAircraft.tailNumber],\n      takeOffTime: dayjs().format(LOGBOOK_TIME_FORMAT),\n    };\n\n    setFlyingGliders({\n      ...updatedFlyingGliders,\n    });\n  }, [selectedAircraft, assignments, swapPositions, flyingGliders, setFlyingGliders]);\n\n  const onDragEnd = useCallback(({\n    source,\n    destination\n  }) => {\n    if (!destination) {\n      return;\n    }\n\n    swapPositions(source.index, destination.index);\n  }, [swapPositions]);\n\n  const assignPilot = useCallback((pilotId, tailNumber) => {\n    const updatedAssignments = {...assignments};\n    updatedAssignments[tailNumber] = pilots.find(pilot => pilot.id === pilotId);\n    setAssignments(updatedAssignments);\n  }, [assignments, setAssignments, pilots]);\n\n  const unAssignPilot = useCallback((tailNumber) => {\n    const updatedAssignments = {...assignments};\n    delete updatedAssignments[tailNumber];\n    setAssignments(updatedAssignments);\n  }, [assignments, setAssignments]);\n\n  const landButtonPressed = useCallback(() => {\n    if (!showFlyingAircraft && Object.keys(flyingGliders).length) {\n      setShowFlyingAircraft(true);\n    } else {\n      setShowFlyingAircraft(false);\n    }\n  }, [flyingGliders, showFlyingAircraft]);\n\n  const autoSchedulePressed = useCallback(() => {\n    // Get a list of all unassigned aircraft\n    const assignedTailNumbers = Object.keys(assignments);\n    const unassginedGliders = Object.values(selectedAircraft).filter(glider => assignedTailNumbers.indexOf(glider.tailNumber) === -1);\n\n    const activePilots = pilots.filter((pilot) => {\n      // Check if pilot isn't already assigned and if they are active\n      const pilotHasAssignment = Object.values(assignments).some(a => a.id === pilot.id);\n\n      return !pilotHasAssignment && pilot.active;\n    }).sort((a, b) => {\n      if (getFlightsForPilot(a.id) === getFlightsForPilot(b.id)) {\n        return a.order - b.order;\n      }\n\n      return a.starts - b.starts;\n    });\n\n    let assignmentsToPush = [];\n\n    // For every unassigned glider, find the first best pilot that can fly it\n    unassginedGliders.sort((a, b) => a.order - b.order).forEach((unassginedGlider, index) => {\n      // Make sure to sort pilots based on their starts, the lowest starts will go first\n      activePilots.filter((pilot) => {\n        return assignmentsToPush.map(({ pilotId }) => pilotId).indexOf(pilot.id) === -1;\n      }).some(pilot => {\n        // Get pilot preferences first\n        let preference = preferences[pilot.id];\n\n        if (!preference || (preference && !Object.keys(preference).length)) {\n          // If this pilot has no specific preferences, their type takes presidence\n          const { type } = pilot;\n\n          if (!type) {\n            // If pilot has neither preference nor type, they cannot be taken into account for scheduling\n            // Make sure all pilots have a type assigned, otherwise they will require manual assigning\n            return false;\n          }\n\n          preference = DEFAULT_PREFERENCES[type];\n        } else {\n          preference = Object.keys(preference);\n        }\n\n        // See if we can schedule this pilot for this aircraft\n        if (preference.indexOf(unassginedGlider.tailNumber) !== -1) {\n          assignmentsToPush = [\n            ...assignmentsToPush,\n            {\n              pilotId: pilot.id,\n              tailNumber: unassginedGlider.tailNumber,\n            },\n          ];\n\n          // Return true to stop looping through candidates, we just found one\n          return true;\n        }\n\n        return false;\n      });\n    });\n\n    const updatedAssignments = {...assignments};\n\n    assignmentsToPush.forEach(({\n      pilotId: idOfPilotToAssign,\n      tailNumber,\n    }) => {\n      updatedAssignments[tailNumber] = pilots.find(({ id }) => idOfPilotToAssign === id );\n    });\n\n    setAssignments(updatedAssignments);\n  }, [assignments, getFlightsForPilot, pilots, preferences, selectedAircraft, setAssignments]);\n\n  const resetButtonPressed = useCallback(() => {\n    const flyingTailNumbers = Object.keys(flyingGliders);\n    const updatedAssignments = Object.fromEntries(Object.entries(assignments).filter(([tailNumber, pilot]) => flyingTailNumbers.indexOf(tailNumber) !== -1));\n\n    setAssignments({...updatedAssignments});\n  }, [assignments, flyingGliders, setAssignments]);\n\n  return (\n    <>\n      <div className=\"container no-padding startline-container\">\n        <DragDropContext onDragEnd={onDragEnd}>\n          <Droppable droppableId=\"droppable\">\n            {(provided, snapshot) => (\n              <div className=\"list-container\" {...provided.droppableProps} ref={provided.innerRef}>\n                {\n                  Object.values(selectedAircraft)\n                    .sort((a, b) => a.order - b.order).map((glider, index) => (\n                    <Draggable\n                      key={glider.tailNumber}\n                      draggableId={glider.tailNumber}\n                      index={index}\n                      isDragDisabled={flyingGliders[glider.tailNumber] !== undefined}\n                    >\n                      {(provided, snapshot) => (\n                        <div\n                          className={`starting-line-position ${flyingGliders[glider.tailNumber] ? 'flying' : ''}`}\n                          ref={provided.innerRef}\n                          {...provided.draggableProps}\n                          {...provided.dragHandleProps}\n                          style={getDraggableStyle(\n                            snapshot.isDragging,\n                            provided.draggableProps.style,\n                          )}\n                        >\n                          <div className=\"grass\">\n                            <Aircraft aircraft={glider} />\n                          </div>\n                          <div className={`container pilot ${snapshot.isDragging ? 'is-dragging' : ''}`}>\n                            <AssignedPilot isFlying={flyingGliders[glider.tailNumber]} unAssign={unAssignPilot} assign={assignPilot} aircraft={glider} pilot={assignments[glider.tailNumber]} />\n                          </div>\n                        </div>\n                      )}\n                    </Draggable>\n                  ))\n                }\n                {provided.placeholder}\n              </div>\n            )}\n          </Droppable>\n        </DragDropContext>\n      </div>\n\n      {\n        showFlyingAircraft ? (\n          <div className=\"flying-gliders\">\n            {\n              Object.keys(flyingGliders).map(tailNumber => selectedAircraft[tailNumber]).map(glider => (\n                <AircraftWithPilot onClick={() => land(glider)} key={glider.tailNumber} pilot={assignments[glider.tailNumber]} aircraft={glider} />\n              ))\n            }\n          </div>\n        ) : ''\n      }\n\n      <div className=\"startline-controls\">\n        <div className=\"left\">\n          <button onClick={launch} className=\"button launch-button green\">\n            <i className=\"fas fa-plane-departure\"></i>\n          </button>\n          <button onClick={() => landButtonPressed()} className=\"button land-button red\">\n            <i className=\"fas fa-plane-arrival\"></i>\n          </button>\n          <button onClick={() => autoSchedulePressed()} className=\"button land-button blue\">\n            <i className=\"fas fa-magic\"></i>\n          </button>\n        </div>\n\n        <div className=\"right\">\n          <button onClick={() => resetButtonPressed()} className=\"button\">\n            <i className=\"fas fa-redo\"></i>\n          </button>\n        </div>\n      </div>\n    </>\n  )\n}\n","export const LOGBOOK_TIME_FORMAT = 'DD-MM-YYYY HH:mm';\n","import React, { useCallback } from 'react';\nimport useLocalStorage from 'hooks/useLocalStorage';\nimport './Pilot.scss';\n\nexport default ({\n  remove,\n  toggleType,\n  hideControls,\n  hasPreferences,\n  pilot: {\n    id,\n    name,\n    type,\n  } = {},\n  onClick = () => {},\n}) => {\n  const [logBook] = useLocalStorage('flights', []);\n\n  const getFlightsForPilot = useCallback((pilotId) => {\n    return logBook.filter(({ exclude, pilotInCommand: { id } }) => !exclude && id === pilotId).length;\n  }, [logBook]);\n\n  return (\n    <div onClick={onClick} className=\"pilot-container\">\n      <div className=\"flex\">\n        <h2>{name ? name : ''}</h2>\n        {\n          hasPreferences ? (\n            <span className=\"led red\" />\n          ) : ''\n        }\n      </div>\n      {\n        hideControls ? '' : (\n          <div className=\"controls\">\n            <span className=\"starts-badge\">{getFlightsForPilot(id)}</span>\n            <span onClick={() => toggleType(id)} className={`type-button ${type}`}>{type ? type : '???'}</span>\n            <i onClick={remove} className=\"fas fa-times\"></i>\n          </div>\n        )\n      }\n    </div>\n  );\n}\n","import React, { useState, useCallback } from 'react';\nimport './PilotPlaceholder.scss';\n\nexport default ({\n  addPilot,\n}) => {\n  const [newPilotName, setNewPilotName] = useState('');\n\n  const submit = useCallback((name) => {\n    addPilot(name);\n    setNewPilotName('');\n  }, [addPilot])\n\n  return (\n    <div className=\"new-pilot-container\">\n      <input onChange={({ target: { value }}) => setNewPilotName(value)} type=\"text\" placeholder=\"New Pilot\" value={newPilotName} />\n      <button className=\"green\" onClick={() => submit(newPilotName)} disabled={newPilotName.length < 1}><i className=\"fas fa-plus\"></i></button>\n    </div>\n  );\n};\n","import React, { useCallback, useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Pilot from 'components/pilots/Pilot';\nimport PilotPlaceholder from 'components/pilots/PilotPlaceholder';\nimport useLocalStorage from 'hooks/useLocalStorage';\nimport { v4 as uuid } from 'uuid';\nimport './PilotList.scss';\n\nconst TYPES = [\n  'dbo',\n  'solo',\n  'vvo',\n  'spl',\n];\n\nexport default () => {\n  const [pilots, setPilots] = useLocalStorage('pilots', []);\n  const [selectedAircraft, setSelectedAircraft] = useLocalStorage('selected-gliders', {});\n  const [flights, setFlights] = useLocalStorage('flights', []);\n  const [preferences, setPreferences] = useLocalStorage('pilot-preferences', {});\n  const [assignedPilots, setAssignedPilots] = useLocalStorage('assigned-pilots', []);\n  const [showWarning, setShowWarning] = useState(false);\n  const [warningText, setWarningText] = useState(false);\n\n  const addPilot = useCallback((name) => {\n    // First check if already exists\n    const candidatePilotIndex = pilots.findIndex(pilot => pilot.name.toLowerCase() === name.toLowerCase());\n    let pilot = {};\n\n    // If we find them, then we just simply re-enable them, and their history is thus preserved\n    if (candidatePilotIndex !== -1) {\n      const candidatePilot = pilots[candidatePilotIndex];\n      pilot = {\n        ...candidatePilot,\n        priority: pilots.filter(pilot => pilot.active).length,\n        active: true,\n      };\n\n      setPilots([\n        ...pilots.slice(0, candidatePilotIndex),\n        {\n          ...pilot,\n        },\n        ...pilots.slice(candidatePilotIndex + 1),\n      ]);\n    } else {\n      // When nothing is found, we create a new pilot.\n      pilot = {\n        id: uuid(),\n        priority: pilots.filter(pilot => pilot.active).length,\n        name,\n        active: true,\n      };\n      setPilots([\n        ...pilots,\n        {\n          ...pilot,\n        },\n      ]);\n    }\n\n    if (!preferences[pilot.id]) {\n      // Create default preferences for pilot\n      const updatedPreferences = {\n        ...preferences,\n      };\n\n      updatedPreferences[pilot.id] = {};\n\n      setPreferences(updatedPreferences);\n    }\n  }, [pilots, preferences, setPilots, setPreferences]);\n\n  const deletePilot = useCallback((id) => {\n    // Unassign if assigned to any \"kist\"\n    const updatedAssignedPilots = Object.fromEntries(Object.entries({...assignedPilots}).filter(([tailNumber, pilot]) => pilot.id !== id));\n    setAssignedPilots({\n      ...updatedAssignedPilots,\n    });\n\n    // Set pilot inactive, but never really forget him/her\n    const indexOfPilot = pilots.findIndex(pilotFromCollection => pilotFromCollection.id === id);\n    const updatedPilot = pilots[indexOfPilot]\n\n    setPilots([\n      ...pilots.slice(0, indexOfPilot),\n      {\n        ...updatedPilot,\n        active: false,\n      },\n      ...pilots.slice(indexOfPilot + 1),\n    ]);\n  }, [pilots, setPilots, assignedPilots, setAssignedPilots]);\n\n  const incrementType = (pilot) => {\n    const currentIndex = TYPES.findIndex(type => type === pilot.type);\n    let nextIndex = currentIndex + 1;\n\n    if (nextIndex >= TYPES.length) {\n      nextIndex = 0;\n    }\n\n    return {\n      ...pilot,\n      type: TYPES[nextIndex],\n    };\n  }\n\n  const toggleType = useCallback((id) => {\n    const indexOfPilot = pilots.findIndex(pilotFromCollection => pilotFromCollection.id === id);\n    const pilot = incrementType(pilots[indexOfPilot]);\n    setPilots([\n      ...pilots.slice(0, indexOfPilot),\n      pilot,\n      ...pilots.slice(indexOfPilot + 1),\n    ]);\n  }, [pilots, setPilots]);\n\n  const resetButtonPressed = useCallback(() => {\n    const updatedPilots = pilots.map((pilot) => ({\n      ...pilot,\n      active: false,\n    }));\n\n    setSelectedAircraft({});\n    setFlights([]);\n\n    setPilots([\n      ...updatedPilots\n    ]);\n\n    setShowWarning(false);\n  }, [pilots, setFlights, setPilots, setSelectedAircraft]);\n\n  const confirmReset = useCallback(() => {\n    setShowWarning(true);\n    setWarningText('This will reset all pilots, flights, and aircraft! You sure about that?');\n  }, [setShowWarning, setWarningText]);\n\n  return (\n    <div className=\"container pilot-list-container\">\n      <div className=\"pilot-list\">\n        {\n          pilots.filter(({ active }) => active).sort((a, b) => a.priority - b.priority).map((pilot) => (\n            <Pilot hasPreferences={Object.keys(preferences[pilot.id]).length} key={pilot.id} toggleType={toggleType} remove={() => deletePilot(pilot.id)} pilot={pilot} />\n          ))\n        }\n      </div>\n      <PilotPlaceholder addPilot={addPilot} />\n      <button onClick={confirmReset} className=\"reset-button red\">Reset Day <span aria-label=\"warning\" role=\"img\">⚠️</span></button>\n      <NavLink to=\"/settings\">\n        <button className=\"settings-button blue\">Settings</button>\n      </NavLink>\n\n      {\n        showWarning ? (\n          <div className=\"confirm-dialog\">\n            <h2>Are you sure?</h2>\n            <p>{warningText}</p>\n\n            <div className=\"controls\">\n              <button onClick={() => resetButtonPressed()} className=\"settings-button green\">Yes</button>\n              <button onClick={() => setShowWarning(false)} className=\"settings-button red\">No</button>\n            </div>\n          </div>\n        ) : ''\n      }\n    </div>\n  )\n};\n","export const CLUB_GLIDERS = [\n  {\n    tailNumber: '808',\n    tailNumberColor: '#12428a',\n  },\n  {\n    tailNumber: 'ZD',\n    tailNumberColor: '#d42e2e',\n  },\n  {\n    tailNumber: 'LUC',\n    tailNumberColor: '#ff7f09',\n  },\n  {\n    tailNumber: 'FD',\n    tailNumberColor: '#b42323',\n  },\n  {\n    tailNumber: 'WD',\n    tailNumberColor: '#787878',\n  },\n  {\n    tailNumber: 'WB1',\n    tailNumberColor: '#787878',\n  },\n];\n","import React, { useCallback, useMemo } from 'react';\nimport Aircraft from 'components/aircraft/Aircraft';\nimport useLocalStorage from 'hooks/useLocalStorage';\nimport { CLUB_GLIDERS } from 'constants/gliders';\nimport './AircraftList.scss';\n\nexport default ({\n  onClick,\n  selectedPreferences,\n  isPreferences,\n}) => {\n  const [selectedAircraft, setSelectedAircraft] = useLocalStorage('selected-gliders', {});\n  const [flyingGliders] = useLocalStorage('flying', {});\n\n  const isFlying = useCallback((tailNumber) => {\n    return flyingGliders[tailNumber] !== undefined;\n  }, [flyingGliders]);\n\n  const gliders = useMemo(() => {\n    return CLUB_GLIDERS.map((glider) => {\n      const selected = selectedAircraft[glider.tailNumber] !== undefined;\n\n      return {\n        ...glider,\n        selected,\n      };\n    })\n  }, [selectedAircraft]);\n\n  const toggleAircraft = useCallback((tailNumber) => {\n    // Get the amount of selected aircraft currently available\n    // We use this to set the order in the list for the starting line\n    const amountOfSelectedAircraft = Object.entries(selectedAircraft).length;\n\n    let updatedSelectedAircraft = {\n      ...selectedAircraft,\n    }\n\n    if (updatedSelectedAircraft[tailNumber] && !isFlying(tailNumber)) {\n      // Delete from map if already exists\n      delete updatedSelectedAircraft[tailNumber];\n\n      // Recalculate indices\n      updatedSelectedAircraft = Object.fromEntries(Object.entries(updatedSelectedAircraft).map(([tailNumber, glider], index) => ([\n        tailNumber,\n        {\n          ...glider,\n          order: index,\n        }\n      ])));\n    } else {\n      // Add to mapping when it doesn't exist yet\n      updatedSelectedAircraft[tailNumber] = gliders.find(glider => glider.tailNumber === tailNumber);\n      // This makes it so that the order is generated onto the aircraft when it's added into rotation\n      updatedSelectedAircraft[tailNumber].order = amountOfSelectedAircraft;\n    }\n\n    setSelectedAircraft(updatedSelectedAircraft);\n  }, [selectedAircraft, isFlying, setSelectedAircraft, gliders]);\n\n  return (\n    <div className=\"container aircraft-list-container\">\n      {\n        isPreferences ? (\n          <div className=\"aircraft-list preferences-for-pilot\">\n            {\n              gliders.map((glider) => (\n                <Aircraft onClick={() => onClick(glider)} key={glider.tailNumber} aircraft={glider} selected={selectedPreferences && selectedPreferences[glider.tailNumber]} selectable />\n              ))\n            }\n          </div>\n        ) : (\n          <div className=\"aircraft-list\">\n            {\n              gliders.map((glider) => (\n                <Aircraft onClick={toggleAircraft} key={glider.tailNumber} aircraft={glider} selected={glider.selected} selectable />\n              ))\n            }\n          </div>\n        )\n      }\n    </div>\n  )\n};\n","import React, { useCallback, useState } from 'react';\nimport Pilot from 'components/pilots/Pilot';\nimport AircraftList from 'components/aircraft/AircraftList';\nimport useLocalStorage from 'hooks/useLocalStorage';\nimport { CLUB_GLIDERS } from 'constants/gliders';\nimport './Preferences.scss';\n\nexport default () => {\n  const [pilots] = useLocalStorage('pilots', []);\n  const [preferences, setPreferences] = useLocalStorage('pilot-preferences', {});\n  const [selectedPilot, setSelectedPilot] = useState(null);\n\n  const showPreferences = useCallback((pilot) => {\n    setSelectedPilot(pilot);\n  }, [setSelectedPilot]);\n\n  const togglePreferences = useCallback((selectedGlider) => {\n    // Toggle specific aircraft into user preferences\\\n    const updatedPreferences = {\n      ...preferences\n    };\n\n    // If there were no preferences for this pilot yet, generate them\n    if (!updatedPreferences[selectedPilot.id]) {\n      updatedPreferences[selectedPilot.id] = {};\n    }\n\n    if (updatedPreferences[selectedPilot.id][selectedGlider.tailNumber]) {\n      // Delete from map if already exists\n      delete updatedPreferences[selectedPilot.id][selectedGlider.tailNumber];\n    } else {\n      // Add to mapping when it doesn't exist yet\n      updatedPreferences[selectedPilot.id][selectedGlider.tailNumber] = CLUB_GLIDERS.find(clubGlider => clubGlider.tailNumber === selectedGlider.tailNumber);\n    }\n\n    setPreferences({...updatedPreferences});\n  }, [preferences, selectedPilot, setPreferences]);\n\n  return (\n    <div className=\"container preferences-container\">\n      {\n        pilots.map((pilot) => (\n          <Pilot key={pilot.id} onClick={() => showPreferences(pilot)} pilot={pilot} hasPreferences={Object.keys(preferences[pilot.id]).length} hideControls />\n        ))\n      }\n\n      {\n        selectedPilot ? (\n          <div className=\"preferences\">\n            <h1>{selectedPilot.name}</h1>\n            <AircraftList isPreferences selectedPreferences={preferences[selectedPilot.id] } onClick={togglePreferences} />\n            <button onClick={() => setSelectedPilot(null)} className=\"button blue\">Done</button>\n          </div>\n        ) : ''\n      }\n    </div>\n  )\n};\n","import React, { useState, useCallback } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport './Settings.scss';\n\nexport default () => {\n  const [showWarning, setShowWarning] = useState(false);\n  const [warningText, setWarningText] = useState(false);\n\n  const confirmReset = useCallback(() => {\n    setShowWarning(true);\n    setWarningText('I\\'m almost 100% sure you don\\'t want to do this... Are you sure? This will wipe all remembered data from this device!');\n  }, [setShowWarning, setWarningText]);\n\n  return (\n    <div className=\"container settings-container\">\n      <NavLink to=\"/pilot-preferences\">\n        <button className=\"settings-button blue\">Pilot Preferences</button>\n      </NavLink>\n      <NavLink to=\"/logbook\">\n        <button className=\"settings-button green\">Flight Logbook</button>\n      </NavLink>\n      <button onClick={() => confirmReset()} className=\"settings-button red\">Clear All Data <span aria-label=\"warning\" role=\"img\">⚠️</span></button>\n\n      {\n        showWarning ? (\n          <div className=\"confirm-dialog\">\n            <h2>Are you sure?</h2>\n            <p>{warningText}</p>\n\n            <div className=\"controls\">\n              <button onClick={() => {}} className=\"settings-button green\">Yes</button>\n              <button onClick={() => setShowWarning(false)} className=\"settings-button red\">No</button>\n            </div>\n          </div>\n        ) : ''\n      }\n    </div>\n  );\n}\n","import React from 'react';\nimport dayjs from 'dayjs';\nimport { LOGBOOK_TIME_FORMAT } from 'constants/constants';\nimport './Aircraft.scss';\n\nexport default ({\n  flight: {\n    glider: {\n      tailNumber,\n      tailNumberColor,\n    },\n    pilotInCommand: {\n      name,\n    },\n    takeOffTime,\n    durationOfFlight,\n    exclude = false,\n  },\n  onClick = () => {},\n}) => {\n  const textStyle = {\n    color: tailNumberColor,\n  }\n\n  return (\n    <div onClick={() => onClick()} className={`aircraft-with-pilot-container logbook ${exclude ? 'exclude' : ''}`}>\n      <div className=\"flex\">\n        <span style={textStyle} className=\"tail-number\">\n          <h1>{tailNumber}</h1>\n        </span>\n        <p>{name}</p>\n      </div>\n      <div className=\"flex timetable\">\n        <p>{dayjs(takeOffTime, LOGBOOK_TIME_FORMAT).format('HH:mm')}</p>\n        <p>{durationOfFlight}</p>\n      </div>\n    </div>\n  );\n}\n","import React, { useCallback } from 'react';\nimport LogbookEntry from 'components/aircraft/LogbookEntry';\nimport useLocalStorage from 'hooks/useLocalStorage';\nimport './Logbook.scss';\n\nexport default () => {\n  const [flights, setFlights] = useLocalStorage('flights', []);\n\n  const excludeFlight = useCallback((flight) => {\n    // Set pilot inactive, but never really forget him/her\n    const indexOfFlight = flights.findIndex(({ id }) => id === flight.id);\n    const updatedFlight = flights[indexOfFlight];\n\n    setFlights([\n      ...flights.slice(0, indexOfFlight),\n      {\n        ...updatedFlight,\n        exclude: !flight.exclude,\n      },\n      ...flights.slice(indexOfFlight + 1),\n    ]);\n  }, [flights, setFlights]);\n\n  return (\n    <div className=\"container logbook-container\">\n      {\n        flights.map((flight) => (\n          <LogbookEntry key={flight.id} onClick={() => excludeFlight(flight)} flight={flight} />\n        ))\n      }\n    </div>\n  );\n}\n","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  NavLink,\n} from 'react-router-dom';\nimport StartLine from 'components/startLine/StartLine';\nimport PilotList from 'components/pilots/PilotList';\nimport AircraftList from 'components/aircraft/AircraftList';\nimport Preferences from 'components/pilots/Preferences';\nimport Settings from 'components/settings/Settings';\nimport Logbook from 'components/pilots/Logbook';\nimport 'styles/reset.scss';\nimport 'styles/general.scss';\n\nexport default () => (\n  <div>\n    <Router>\n      <Switch>\n        <Route path=\"/\" exact>\n          <StartLine />\n        </Route>\n        <Route path=\"/aircraft\">\n          <AircraftList />\n        </Route>\n        <Route path=\"/pilots\">\n          <PilotList />\n        </Route>\n        <Route path=\"/settings\">\n          <Settings />\n        </Route>\n        <Route path=\"/pilot-preferences\">\n          <Preferences />\n        </Route>\n        <Route path=\"/logbook\">\n          <Logbook />\n        </Route>\n      </Switch>\n\n      <nav className=\"tabs\">\n        <ul>\n          <li>\n            <NavLink to=\"/pilots\">Pilots</NavLink>\n          </li>\n          <li>\n            <NavLink to=\"/aircraft\">Aircraft</NavLink>\n          </li>\n          <li>\n            <NavLink to=\"/\" exact>Starting</NavLink>\n          </li>\n        </ul>\n      </nav>\n    </Router>\n  </div>\n);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}